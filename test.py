prompt = "建水记[注]（之四）于坚。看哪，这原始之城，依然像它被创造出来之际，藏在一座朱红色的、宫殿般的城楼后面，“明洪武二十年建城。砌以砖石，周围六里，高二丈七尺。为门四，东迎晖，西清远，南阜安，北永贞。”（《建水县志》）如果在城外20世纪初建造的临安车站下车，经过太史巷、东井、洗马塘、小桂湖……沿着迎晖路向西，来到迎晖门，穿过拱形的门洞进城，依然有一种由外到内，从低到高，登堂入室，从蛮荒到文明的仪式感，似乎“仁者人也”是从此刻开始。高高在上的是朝阳、白云、鸟群、落日、明月、星宿，而不是摩天大楼。一圈高大厚实的城墙环绕着它，在城门外看不出高低深浅，一旦进入城门，扑面而来的就是飞檐斗拱、飞阁流丹、钩心斗角、楼台亭阁、酒旌食馆、朱门闾巷……主道两旁遍布商店、酒肆、庙字、旅馆……风尘仆仆者一阵松弛，终于卸载了，可以下棋玩牌了，可以喝口老酒了，可以饮茶了，可以闲逛了，可以玩物丧志了，可以一掷千金了，可以浅斟低唱了，可以秉烛夜游了……忽然瞥见“小楼一夜听春雨，深巷明朝卖杏花”那类女子——建水的卖花女与江南的不尽相同，这边的女性身体上洋溢着一种积极性，结实、健康、天真——正挑着一担子火红欲燃的石榴，笑呵呵地在青石铺成的街中央飘着呢。不免精神为之一振，先去买几个来解渴。街面上，步行者斜穿横过，大摇大摆，扶老携幼，走在正中间，俨然是这个城的君王。满大衡的雕梁画栋、摊贩食廊、耄耋之辈……令司机们缩头缩脑，不敢再风驰电掣。城门不远处就是有口皆碑的临安饭店，开业都快七十年了，就像《水浒传》里描写过的那种。铺面当街敞开，食客满堂，喝汤的喝汤，端饭的端饭，动筷子的动筷子，晃勺子的晃勺子，干酒的干酒，嚼筋的嚼筋，吆五喝六，拈三挑四，叫人望一眼就口水暗涌，肚子不饿也忍不住抬腿跨进去。拖个条凳坐下，来一盘烧卖!这家烧卖的做法是明代传下来的，肥油和面，馅儿是肉皮和肉糜。大锅猛蒸，熟透后装盘，每盘十个，五角一个。再来一土杯苞谷酒，几口灌下去，夹起一枚，蘸些建水土产的甜醋，送入口中，油糜轻溢，爽到时，会以为自己是条梁山泊好汉。临安饭店后面，穿过几条巷子走上十分钟，就是龙井菜市场，那郑屠、张屠、李屠、赵屠……正在案上忙着呢。如果是七月的话，在某个胡同里走着，忽然会闻见蘑菇之香，环顾却是老墙。墙头上挂着一窝大黄梨。哪来的蘑菇耶?走，找去，必能在某家小馆的厨房里找到，叫做干巴菌，正闪亮亮的，在锅子中间冒油呢。这临安大街两边，巷子一条接一条流水般淌开去。在电子地图上，这些密密麻麻的小巷是大片空白，电子地图很不耐烦，只是标出一些大单位的地点和最宽的几条街，抹去了建水城的大量细节，给人的印象，似乎建水城是个荒凉的不毛之地。其实这个城毛细血管密集，据统计，建水城3.3平方公里的范围内有30多条街巷，550多处已经被列为具有保护价值的文物性建筑，这是很粗疏的统计。许多普通人家雕梁画栋的宅子、无名无姓的巷道并不在内。在巷子里面，四合院、水井、老树、门神、香炉、杂货铺、红糖、胡椒、土纸、灶房、明堂、照壁、石榴、苹果、桂花、兰草、绵纸窗、凉粉、米线、青头菌、炊烟、祖母、媳妇、婴孩、善男信女、市井之徒、酒囊饭袋、闲云野鹤、翩翩少年、三姑六婆、环肥燕瘦、虎背熊腰、花容月貌、明眸皓齿、慈眉善目、鹤发童颜……此起彼伏，鳞次栉比。在这个城里，有个家的人真是有福啊。他们还能够像四百年前的祖先们那样安居乐业，不必操心左邻右舍的德行，都是世交啦。有一位绕过曲曲弯弯的小巷，提着在龙井市场买来的水淋淋的草芽（一种建水特有的水生植物，可食，滚油翻炒数秒起锅，甜脆）、莴笋、茄子、青椒、豆腐、毛豆、肉糜、茭瓜……一路上寻思着要怎么搭配，偶尔向世居于此的邻居熟人搭讪，彼此请安。磨磨蹭蹭到某个装饰着斗拱飞檐门头的大门前（两只找错了窝的燕子拍翅逃去），咯吱咯吱地推开安装着铜质狮头门环的双开核桃木大门，抬脚跨过门槛。绕过照壁，经过几秒钟的黑暗，忽然光明大放，回到了曾祖父建造的花香鸟语、阳光灿烂的天井。从供销社退休已经三十年的祖母正躺在一把支在天井中央的红木躺椅上，借着一棵百年香樟树的荫庇瞌睡呢。（有删改）。[注]建水：县名。在云南省，旧称临安。下列对本文相关内容的理解。不正确的一项是（    ) (A)文章引用《建水县志》的记载，将今日建水与其“原始之城”的风貌关联起来，写的是建水绵延不断的历史传承。(B)文意以“仁者人也”来承接并形容进城的“仪式感”，是借儒家经典语句来观照城的规划与人的活动，凸显建水保有传统的人文气息。(C)文章引用诗句“深巷明朝卖杏花”是由街头所见引起的诗意联想，意在转向描写建水女子的“结实、健康、天真”。(D)文章以《水浒传》中的相关描写来类比临安饭店食客满堂的场面，是借梁山好汉的形象来展现建水人性格中的粗犷不羁。答案：从A到D, 我们应选择"

import json
import openai

openai.api_base = "http://localhost:1234/v1"  # point to the local server
openai.api_key = ""


def query_openai_complete(prompt):
    response = openai.Completion.create(
        model="local-model",
        prompt=prompt,
        max_tokens=2000,
        temperature=0,
        stop=["<END>", "\n\n\n\n"],
    )
    result = response["choices"][0]["text"]
    print("---------------------------")
    print(f"🤖 QUESTION: f{prompt}")
    print(f"🌟 RESPONSE: {result}")
    return result


def query_openai_chat(query):
    messages = []
    if isinstance(query, str):
        messages.append({"role": "user", "content": query})
    elif isinstance(query, list):
        messages += query
    else:
        raise ValueError("Unsupported query: {0}".format(query))
    response = openai.ChatCompletion.create(
        model="local-model", messages=messages, temperature=0, stop=[]
    )
    result = response["choices"][0]["message"]["content"]
    print("---------------------------")
    print(f"🤖 QUESTION: f{query}")
    print(f"🌟 RESPONSE: {result}")
    return result


if __name__ == "__main__":
    response = query_openai_chat(prompt)
